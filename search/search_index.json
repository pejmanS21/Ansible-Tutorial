{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Ansible Tutorial","text":"<p>Welcome to Ansible Tutorial.</p>"},{"location":"about-ansible/","title":"About Ansible \ud83e\udd16","text":"<p>Info<p>Tool to automate IT tasks</p> </p>"},{"location":"about-ansible/#why-use-ansible","title":"Why use Ansible?","text":"<p>For example you have 10 servers and want to deploy a new version of an app on it, or update Docker on them. So you have to ssh to those servers and do it by yourself and it\u2019s time consuming.</p> <ol> <li>Execute tasks from your own machine</li> <li>Configurations | Installation | Deployment step in a single <code>YAML</code> file</li> <li>Re-use same file for different environments</li> <li>More reliable &amp; less likely for errors</li> </ol> <p>Info<p>Ansible supports all infrastructure and it is agentless.</p> </p> <p></p>"},{"location":"about-ansible/#ansible-playbooks","title":"Ansible Playbooks","text":"<pre><code>tasks:\n- name: a task in postgres  # Description of task\npostgresql_table:         # Module name\ntable: foo              # Arguments\nrename: bar             # Arguments\n- name: change owner # Description of task\npostgresql_table:  # Module name\nname: foo        # Arguments\nowner: newuser   # Arguments\n</code></pre>"},{"location":"about-ansible/#execute-multiple-modules-in-a-sequence","title":"Execute multiple modules in a sequence","text":"<pre><code>tasks:\n- name: create dir for nginx\nfile:\npath: /path/to/nginx\nstate: directory\n- name: install latest nginx\nyum:\nname: nginx\nstate: latest\n- name: start nginx\nservice:\nname: nginx\nstate: started\n</code></pre>"},{"location":"about-ansible/#where-to-execute-tasks-and-who-execute-them","title":"Where to execute tasks and who execute them?","text":"<pre><code>- hosts: databases\nremote_user: root\nvars:\ntablename: foo\ntableowner: newuser\ntasks:\n- name: rename table from {{ tablename }} to bar\npostgresql_table:\ntable: {{ tablename }}\nrename: bar\n- name: change owner\npostgresql_table:\nname: {{ tablename }}\nowner: {{ tableowner }}\n</code></pre> <p>Warning<p>This file \ud83d\udc46\u00a0is called a <code>play</code> and you can have multiple plays in a single YAML file. That file called a <code>Playbook</code> and with name tag you can name plays.</p> </p>"},{"location":"about-ansible/#where-are-hosts-value-come-from","title":"Where are hosts value come from?","text":"<p>Success<p>Ansible Inventory List</p> </p> <p>Inventory means all the machines involved in task executions</p> <p>Hosts file \ud83d\udc47</p> <pre><code>130.24.1.100\n\n[databases]\n130.24.2.23\n130.24.2.24\n\n[webservers]\napi1.servers.com\napi2.servers.com\n</code></pre>"},{"location":"about-ansible/#ansible-tower","title":"Ansible Tower","text":"<p>course on youtube.</p>"},{"location":"ansible-in-action/","title":"Ansible in Action","text":""},{"location":"ansible-in-action/#installation","title":"Installation","text":"<p>Note</p> <p>There is no need to install ansible on servers, only on your local machine</p> <ul> <li>Linux</li> </ul> <pre><code>$ sudo apt install ansible\n</code></pre> <ul> <li>MacOS</li> </ul> <pre><code>% brew install ansible\n</code></pre> <ul> <li>Check ansible</li> </ul> <pre><code>ansible --version\n// Output\nansible [core 2.13.5]\n  config file = None\n  configured module search path = ['/Users/pejman/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']\n  ansible python module location = /opt/homebrew/Cellar/ansible/6.5.0/libexec/lib/python3.10/site-packages/ansible\n  ansible collection location = /Users/pejman/.ansible/collections:/usr/share/ansible/collections\n  executable location = /opt/homebrew/bin/ansible\n  python version = 3.10.8 (main, Oct 13 2022, 09:48:40) [Clang 14.0.0 (clang-1400.0.29.102)]\n  jinja version = 3.1.2\n  libyaml = True\n</code></pre>"},{"location":"ansible-in-action/#check-ansible","title":"Check ansible","text":"<p>Create a folder called <code>inventory</code> and in that create a new file called <code>hosts</code> and group server IP and dns address in it.</p> <p>hosts:</p> inventory/hosts<pre><code>[servers]\n123.4.56.7\napi1.test.com\n...\n</code></pre> <p>Info</p> <p>You can Specify that each server uses specific <code>ssh-key</code> \ud83d\udc47</p> inventory/hosts<pre><code>[servers]\n123.4.56.7\napi1.test.com\n\n[servers:vars]\nansible_ssh_private_key_file=~/.ssh/id_ed25519\nansible_user=root\n...\n</code></pre> <p>Warning</p> <p>ansible can't pass sshHostKeyChecking by default <code>([yes/no/fingerprint])</code>. Although there is a way to ignore it via <code>~/.ansible.cfg</code> filr but it's NOT recommended for long-live servers!</p> <p>after that excute following command:</p> <pre><code>ansible -i ./inventory/hosts servers -m ping --user root\n</code></pre> Tip <p>Use <code>--ask-pass</code> if needed!</p> <pre><code>ansible -i ./inventory/hosts servers -m ping --user root --ask-pass\n</code></pre> <pre><code>$ ansible -i ./inventory/hosts servers -m ping --user root\n\n// Output:\n123.4.56.7 | SUCCESS =&gt; {\n    \"ansible_facts\": {\n        \"discovered_interpreter_python\": \"/usr/bin/python3\"\n    },\n    \"changed\": false,\n    \"ping\": \"pong\"\n}\n</code></pre> <p>this means ansible can connect to servers and you are good to go.</p>"},{"location":"ansible-in-action/#collections","title":"Collections","text":"<p>List of modules and plugins that can be executed by ansible, whether built-in or installable via <code>ansible-galaxy</code>.</p> <p>Info</p> <p>ansible-galaxy is hub to upload &amp; download ansible collections</p> <code>ansible-galaxy</code> CommandCollection List <pre><code>ansible-galaxy collection list\n</code></pre> <pre><code># /opt/homebrew/Cellar/ansible/6.5.0/libexec/lib/python3.10/site-packages/ansible_collections\nCollection                    Version\n----------------------------- -------\namazon.aws                    3.5.0\nansible.netcommon             3.1.3\nansible.posix                 1.4.0\nansible.utils                 2.6.1\nansible.windows               1.11.1\narista.eos                    5.0.1\nawx.awx                       21.7.0\nazure.azcollection            1.13.0\ncheck_point.mgmt              2.3.0\nchocolatey.chocolatey         1.3.1\ncisco.aci                     2.2.0\ncisco.asa                     3.1.0\ncisco.dnac                    6.6.0\ncisco.intersight              1.0.19\ncisco.ios                     3.3.2\ncisco.iosxr                   3.3.1\ncisco.ise                     2.5.5\ncisco.meraki                  2.11.0\ncisco.mso                     2.0.0\ncisco.nso                     1.0.3\ncisco.nxos                    3.2.0\ncisco.ucs                     1.8.0\ncloud.common                  2.1.2\ncloudscale_ch.cloud           2.2.2\ncommunity.aws                 3.6.0\ncommunity.azure               1.1.0\ncommunity.ciscosmb            1.0.5\ncommunity.crypto              2.7.0\ncommunity.digitalocean        1.22.0\ncommunity.dns                 2.3.3\ncommunity.docker              2.7.1\ncommunity.fortios             1.0.0\ncommunity.general             5.7.0\ncommunity.google              1.0.0\ncommunity.grafana             1.5.3\ncommunity.hashi_vault         3.3.1\ncommunity.hrobot              1.5.2\ncommunity.libvirt             1.2.0\ncommunity.mongodb             1.4.2\ncommunity.mysql               3.5.1\ncommunity.network             4.0.1\ncommunity.okd                 2.2.0\ncommunity.postgresql          2.2.0\ncommunity.proxysql            1.4.0\ncommunity.rabbitmq            1.2.2\ncommunity.routeros            2.3.0\ncommunity.sap                 1.0.0\ncommunity.sap_libs            1.3.0\ncommunity.skydive             1.0.0\ncommunity.sops                1.4.1\ncommunity.vmware              2.10.0\ncommunity.windows             1.11.0\ncommunity.zabbix              1.8.0\ncontainers.podman             1.9.4\ncyberark.conjur               1.2.0\ncyberark.pas                  1.0.14\ndellemc.enterprise_sonic      1.1.2\ndellemc.openmanage            5.5.0\ndellemc.os10                  1.1.1\ndellemc.os6                   1.0.7\ndellemc.os9                   1.0.4\nf5networks.f5_modules         1.20.0\nfortinet.fortimanager         2.1.5\nfortinet.fortios              2.1.7\nfrr.frr                       2.0.0\ngluster.gluster               1.0.2\ngoogle.cloud                  1.0.2\nhetzner.hcloud                1.8.2\nhpe.nimble                    1.1.4\nibm.qradar                    2.1.0\nibm.spectrum_virtualize       1.10.0\ninfinidat.infinibox           1.3.3\ninfoblox.nios_modules         1.4.0\ninspur.ispim                  1.1.0\ninspur.sm                     2.2.0\njunipernetworks.junos         3.1.0\nkubernetes.core               2.3.2\nmellanox.onyx                 1.0.0\nnetapp.aws                    21.7.0\nnetapp.azure                  21.10.0\nnetapp.cloudmanager           21.20.1\nnetapp.elementsw              21.7.0\nnetapp.ontap                  21.24.1\nnetapp.storagegrid            21.11.1\nnetapp.um_info                21.8.0\nnetapp_eseries.santricity     1.3.1\nnetbox.netbox                 3.8.0\nngine_io.cloudstack           2.2.4\nngine_io.exoscale             1.0.0\nngine_io.vultr                1.1.2\nopenstack.cloud               1.10.0\nopenvswitch.openvswitch       2.1.0\novirt.ovirt                   2.2.3\npurestorage.flasharray        1.14.0\npurestorage.flashblade        1.10.0\npurestorage.fusion            1.1.1\nsensu.sensu_go                1.13.1\nservicenow.servicenow         1.0.6\nsplunk.es                     2.1.0\nt_systems_mms.icinga_director 1.31.0\ntheforeman.foreman            3.7.0\nvmware.vmware_rest            2.2.0\nvultr.cloud                   1.1.0\nvyos.vyos                     3.0.1\nwti.remote                    1.0.4\n</code></pre>"},{"location":"ansible-in-action/#playbooks","title":"playbooks","text":"<p>for example we want to <code>apt update</code> and install <code>oh-my-zsh</code> on our servers via ansible. we need to use playbooks in order to do that.</p> <p>To execute a playbook use following command:</p> <pre><code>$ ansible-playbook ./playbooks/apt.yml --user root -i ./inventory/hosts\n\n// Output\nPLAY [servers] **************************************************\nTASK [Gathering Facts] ********************************************************\nok: [123.4.56.7]\nTASK [apt] ********************************************************************\nchanged: [123.4.56.7]\nPLAY RECAP **********************************************************\n123.4.56.7                : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0\n</code></pre> <p>Multiple tasks in a Playbook</p> <p>If you want to run multiple tasks in a playbook concurrently, use async with poll set to 0. When you set <code>poll: 0</code>, Ansible starts the task and immediately moves on to the next task without waiting for a result. Each async task runs until it either completes, fails or times out (runs longer than its async value). The playbook run ends without checking back on async tasks. Check npm-install.yml in playbooks.</p>"},{"location":"ansible-in-action/#use-shell-command-in-ansible-playbook","title":"Use <code>shell</code> command in ansible playbook","text":"playbooks/shell.yml<pre><code>---\n- name: Example SHELL Command\nhosts: servers\ntasks:\n- name: Check a specific docker container and Print it\nshell: docker ps | grep \"&lt;container_name&gt;\"\nregister: container_status # Save results of shell command in \"container_status\" variable\n- debug: msg={{container_status.stdout_lines}}\n</code></pre> <pre><code>$ ansible-playbook ./playbooks/shell.yml --user root -i ./inventory/hosts\n\n// Output\nok: [123.4.56.7] =&gt; {\n    \"msg\": [\n        \"49b69674c9e2   portainer/portainer-ce:latest                 \\\"/portainer\\\"             7 days ago     Up 7 days    8000/tcp, 9443/tcp, 0.0.0.0:9000-&gt;9000/tcp, :::9000-&gt;9000/tcp                                                                               portainer\"\n    ]\n}\n</code></pre>"},{"location":"ansible-in-action/#variables","title":"Variables","text":"<p>In the <code>YAML</code> file, variables are declared with curly braces <code>{{ }}</code>, but there are some points that we should consider:</p> <ol> <li>If curly braces come right after <code>:</code> YAML consider them as YAML dictionary so we have to define it like <code>\"{{variable}}\"</code></li> </ol> <pre><code>---\nsrc: \"{{file-location}}\"\n</code></pre> <ol> <li>If curly braces don't come right after <code>:</code> , you can define it just with curly braces</li> </ol> <pre><code>---\nsrc: /path/to/file-{{version}}.tar\n</code></pre>"},{"location":"ansible-in-action/#define-variables","title":"Define variables","text":"<ol> <li>Hard coded in playbook:</li> </ol> <pre><code>---\nvars:\n- dest: /root/path/to/remote\n</code></pre> <ol> <li>In Command line:</li> </ol> <pre><code>$ ansible-playbook -i inventory/hosts playbooks/create-user.yml --extra-vars \"username=pejman user_group=admin\"\n</code></pre> <ol> <li>In variable file (format: <code>YAML</code>):</li> </ol> <pre><code>---\n- name: Create User in SERVER\nhosts: servers\nvars_files:\n- \"../vars/project-vars.yaml\"\nvars:\nuser_comment: this_{{username}}\ntasks: ...\n</code></pre> <ol> <li>Prompt variables in <code>Terminal</code>:</li> </ol> <pre><code>- name: Prompt variables in terminal\nhosts: servers\nvars_prompt:\n- name: prompted_variable\nprompt: Enter variables\n...\n</code></pre> <pre><code>Enter variables: \ud83d\udd10\n\nPLAY [Prompt variables in terminal] *********\n\nTASK [Gathering Facts] *********\n...\n</code></pre>"},{"location":"ansible-in-action/#ansible-configurations","title":"Ansible Configurations","text":"<p>Create an <code>ansible.cfg</code> file to set some settings like path to inventory files, check hosts, etc. So you don't have to write them in command line every time</p>"},{"location":"ansible-in-action/#ansible-with-docker","title":"Ansible with Docker","text":"<ul> <li>ansible Docker Login Module</li> <li>ansible Docker Image Module</li> <li>ansible Docker Compose Module</li> </ul> <p>Check these files to get familiar with ansible-docker integrations</p> <ol> <li>Installation</li> <li>Pull &amp; Run docker service</li> </ol> <p></p>"},{"location":"ansible-in-action/#example","title":"Example","text":""},{"location":"toc/","title":"Table of contents","text":"<ul> <li> About Ansible</li> <li> Ansible in Action</li> </ul>"}]}